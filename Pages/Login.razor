@using VideoHome.Data
@using VideoHome.Services
@inject WebsiteAuthenticator WebsiteAuthenticator
@page "/login"

<AuthorizeView Context="Account">
    <NotAuthorized>
        <div class="col-md-6 offset-md-3 mt-5">
            <div class="card">
                <h4 class="card-header">Login</h4>
                <div class="card-body">
                    <EditForm Model="@_user" OnValidSubmit="TryLogin">
                        <DataAnnotationsValidator />
                        <div class="form-group layout-margin-top">
                            <label>Username</label>
                            <InputText @bind-Value="_user.Username" class="form-control" />
                            <ValidationMessage For="@(() => _user.Username)" />
                        </div>
                        <div class="form-group layout-margin-top">
                            <label>Password</label>
                            <InputText @bind-Value="_user.Password" type="password" class="form-control" />
                            <ValidationMessage For="@(() => _user.Password)" />
                        </div>
                        <button class="btn btn-primary layout-margin-top">
                            @if (loading)
                            {
                                <span class="spinner-border spinner-border-sm mr-1"></span>
                            }
                            Login
                        </button>
                        @if (!string.IsNullOrEmpty(error))
                        {
                            <div class="alert alert-danger mt-3 mb-0">@error</div>
                        }
                    </EditForm>
                </div>
            </div>
        </div>

    </NotAuthorized>
    <Authorized>
        <button type="button" class="btn btn-primary" @onclick="TryLogout">Logout</button>
    </Authorized>
    <Authorizing>
        Authorizing in process...
    </Authorizing>
</AuthorizeView>

@code {
    private User _user { get; set; } = new();
    private string error = "";
    private bool loading = false;

    private async Task TryLogin()
    {
        loading = true;
        var res = await WebsiteAuthenticator.LoginAsync(_user);
        loading = false;
        error = res ? "" : "Wrong credentials!";
    }

    private async Task TryLogout()
    {
        await WebsiteAuthenticator.LogoutAsync();
    }
}
